# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html

# MySQL
spring.profiles.active=dev
spring.application.name=restful-api-lecture

# ===============================
# = WEBSERVER
# ===============================

# Optional Web Server setting (If you want to use another port then default :8080)
# server.port = 9090

# ===============================
# = DATABASE
# ===============================

# Connection url for the database "Local MySQL"
spring.datasource.url = jdbc:mysql://localhost:3306/restful-api-lecture?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Europe/Berlin

# Username and password
spring.datasource.username = root
spring.datasource.password = 123456

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.tomcat.test-while-idle= true
spring.datasource.tomcat.validation-query= SELECT 1

# Optional Settings of Connection pool if you ever have more than one User :)
# https://www.baeldung.com/spring-boot-tomcat-connection-pool
spring.datasource.tomcat.initial-size=15
spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=15
spring.datasource.tomcat.min-idle=8
spring.datasource.tomcat.default-auto-commit=true

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query (Slows down the system, remove in production)
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project. Set to none if its up and running
# https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto.data-initialization.using-hibernate
spring.jpa.hibernate.ddl-auto = update

# Hibernate allows to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

# ===============================
# = THYMELEAF
# ===============================

spring.thymeleaf.cache=false

# ===============================
# = LOGGING
# ===============================

# logging.level.org.springframework = debug
spring.jpa.open-in-view= false
spring.devtools.livereload.enabled=false

